[versions]
compileSdk = "35"
targetSdk = "35"
minSdk = "24"
jvmTarget = "17"

activityCompose = "1.9.3"
agp = "8.7.1"
coreSplashscreen = "1.0.1"
datastore = "1.0.0" # DataStorageTest failed when using 1.1.1 https://issuetracker.google.com/issues/337870543
kotlin = "2.0.0"
compose = "1.7.4"
compose-material3 = "1.3.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
jetbrainsKotlinJvm = "2.0.0"

ktor = "2.3.11" #There is a defect in 3.0.0-beta-1 which related to AcceptAllCookiesStorage, Using Int instead of Long when calculating the cookie exipration
coroutines = "1.7.3"
materialIconsExtended = "1.7.4"
navVersion = "2.8.3"
securityCrypto = "1.1.0-alpha06"
serialization = "1.6.2"
pluginSserialization = "2.0.0"
coreKtxVersion = "1.6.1"
junitKtx = "1.2.1"
androidx-test-runner = "1.6.2"
androidx-credentials = "1.3.0" #May need to use 1.2.2, seem to have issues with 1.3.0-alpha04
robolectric = "4.12.2"
appauth = "0.11.1"
composeBom = "2024.10.00"
activity = "1.9.3"
mockk = "1.13.10"
testLogger = "4.0.0"

nimbus-jose-jwt = "9.37.3"
biometric-ktx = "1.1.0"
activityKtx = "1.9.3"
browser = "1.8.0"

nexus = "1.3.0"
dokka = "1.9.20"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }

androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navVersion" }
androidx-security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCrypto" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtxVersion" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }
androidx-test-runner = { group = "androidx.test", name = "runner", version.ref = "androidx-test-runner" }
robolectric = { group = "org.robolectric" , name = "robolectric" , version.ref = "robolectric" }
appauth = { group = "net.openid" , name = "appauth" , version.ref = "appauth" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }

androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
androidx-credentials = { group = "androidx.credentials", name = "credentials", version.ref = "androidx-credentials" }

androidx-biometric-ktx = { module = "androidx.biometric:biometric-ktx", version.ref = "biometric-ktx" }
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus-jose-jwt" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }
androidx-browser = { group = "androidx.browser", name = "browser", version.ref = "browser" }

android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
dokka-gradlePlugin = { group = "org.jetbrains.dokka", name = "org.jetbrains.dokka.gradle.plugin", version.ref = "dokka" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlinSerialization = {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "pluginSserialization" }
testLogger = { id = "com.adarshr.test-logger", version.ref = "testLogger" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
nexusPublish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
